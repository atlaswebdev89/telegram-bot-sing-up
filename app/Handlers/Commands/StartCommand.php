<?php

namespace App\Handlers\Commands;

use App\Core\Handlers\CommandsHandler;


class StartCommand extends CommandsHandler
{
	protected string $name = 'start';
	protected string $description = 'Start Command to get you started';

	/**
	 * –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞
	 */
	public function getKeyboards()
	{
		return json_encode([
			'keyboard' => [
				[
					[
						'text' => 'üìÜ –ö–∞–ª–µ–Ω–¥–∞—Ä—å',
					],
					[
						'text' => 'üí∞ –°—É–º–º–∞',
					],

				],
				[
					[
						'text' => "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã",
					],
					[
						'text' => "‚è∞ –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã",
					],
				]
			],
			'one_time_keyboard' => FALSE,
			'resize_keyboard' => TRUE,
		]);
	}
	/**
	 * –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
	 */
	public function getKeyboardUser()
	{
		return json_encode([
			'keyboard' => [
				[
					[
						'text' => 'üìÜ –í—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É',
					],
					[
						'text' => 'üìã –ò–Ω—Ñ–æ',
					],

				],
				[
					[
						'text' => "‚è∞ –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã",
					],
					[
						'text' => "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã",
					],
				]
			],
			'one_time_keyboard' => FALSE,
			'resize_keyboard' => TRUE,
		]);
	}
	/**
	 * –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ —Å —É—á–µ—Ç–æ–º —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–ª—è –∞–¥–º–∏–Ω–∞ –±—É–¥—É—Ç –≤—Å–µ, 
	 * –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–π —á–∞—Å—Ç—å –∫–Ω–æ–ø–æ–∫ –Ω–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞)
	 */
	public function getKeybodardAdmin()
	{
		/**
		 * –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ò–Ω–¥–µ–∫—Å —ç—Ç–æ —Ä—è–¥ –ú–∞—Å—Å–∏–≤-–∫–Ω–æ–ø–∫–∏
		 */
		return $this->getButtonsKeybord([
			"0" => [
				"üìÜ –ö–∞–ª–µ–Ω–¥–∞—Ä—å",
				"üìå –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤",

			],
			"1" => [
				"üí∞ –ù–∞ —Å–µ–≥–æ–¥–Ω—è",
				"üí∞ –ù–∞ –∑–∞–≤—Ç—Ä–∞",
			]
		]);
	}

	public function textUser()
	{
		return "–ü—Ä–∏–≤–µ—Ç. –Ø —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç Bastion Travel\n"
			. "–ë–ª–∞–≥–æ–¥–∞—Ä—è –º–Ω–µ —Ç—ã –º–æ–∂–µ—à—å —É–∫–∞–∑–∞—Ç—å  —Å—É–º–º—É –¥–µ–Ω–µ–≥ –∏ –≤—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö, "
			. "–∫–æ–≥–¥–∞ —Ç–µ–±–µ –±—É–¥–µ—Ç —É–¥–æ–±–Ω–æ –ø—Ä–∏–µ—Ö–∞—Ç—å –∫ –º–æ–µ–º—É –Ω–∞—á–∞–ª—å–Ω–∏–∫—É –∏ –ø–æ–ª—É—á–∏—Ç—å cash";
	}
	public function textAdmin()
	{
		return "–ü—Ä–∏–≤–µ—Ç. –Ø —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç <b>Bastion Travel</b>\n"
			. "<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –º–æ–π –ø–æ–≤–µ–ª–∏—Ç–µ–ª—å</b>\n"
			. "–í—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –±–æ—Ç–∞ –∏ –º–æ–∂–µ—Ç–µ –¥–µ–ª–∞—Ç—å –≤—Å–µ —á—Ç–æ –ø–æ–∂–µ–ª–∞–µ—Ç–µ –Ω—É–∂–Ω—ã–º";
	}
	public function execute()
	{
		$result = $this->machine->setDefault();
		$keybords = ($this->isAdmin()) ? $this->getKeybodardAdmin() : $this->getKeyboardUser();
		$text = ($this->isAdmin()) ? $this->textAdmin() : $this->textUser();

		$response = $this->api->sendTextWithButton($this->chat_id(), [
			'text' => $text,
			'button' => $keybords,
			"parse_mode" => "html",
		]);
	}
}
